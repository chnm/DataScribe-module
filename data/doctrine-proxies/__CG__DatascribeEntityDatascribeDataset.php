<?php

namespace DoctrineProxies\__CG__\Datascribe\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DatascribeDataset extends \Datascribe\Entity\DatascribeDataset implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'project', 'itemSet', 'validatedBy', 'exportedBy', 'guidelines', 'exportStorageId', 'validated', 'exported', 'fields', 'id', 'name', 'description', 'syncedBy', 'synced', 'owner', 'createdBy', 'modifiedBy', 'created', 'modified', 'isPublic'];
        }

        return ['__isInitialized__', 'project', 'itemSet', 'validatedBy', 'exportedBy', 'guidelines', 'exportStorageId', 'validated', 'exported', 'fields', 'id', 'name', 'description', 'syncedBy', 'synced', 'owner', 'createdBy', 'modifiedBy', 'created', 'modified', 'isPublic'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DatascribeDataset $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setProject(\Datascribe\Entity\DatascribeProject $project): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProject', [$project]);

        parent::setProject($project);
    }

    /**
     * {@inheritDoc}
     */
    public function getProject(): \Datascribe\Entity\DatascribeProject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProject', []);

        return parent::getProject();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemSet(\Omeka\Entity\ItemSet $itemSet = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemSet', [$itemSet]);

        parent::setItemSet($itemSet);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemSet(): ?\Omeka\Entity\ItemSet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemSet', []);

        return parent::getItemSet();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidatedBy(\Omeka\Entity\User $validatedBy = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidatedBy', [$validatedBy]);

        parent::setValidatedBy($validatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidatedBy(): ?\Omeka\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidatedBy', []);

        return parent::getValidatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setExportedBy(\Omeka\Entity\User $exportedBy = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExportedBy', [$exportedBy]);

        parent::setExportedBy($exportedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getExportedBy(): ?\Omeka\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExportedBy', []);

        return parent::getExportedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setGuidelines(?string $guidelines): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGuidelines', [$guidelines]);

        parent::setGuidelines($guidelines);
    }

    /**
     * {@inheritDoc}
     */
    public function getGuidelines(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGuidelines', []);

        return parent::getGuidelines();
    }

    /**
     * {@inheritDoc}
     */
    public function setExportStorageId(?string $exportStorageId): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExportStorageId', [$exportStorageId]);

        parent::setExportStorageId($exportStorageId);
    }

    /**
     * {@inheritDoc}
     */
    public function getExportStorageId(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExportStorageId', []);

        return parent::getExportStorageId();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidated(\DateTime $validated): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidated', [$validated]);

        parent::setValidated($validated);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidated(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidated', []);

        return parent::getValidated();
    }

    /**
     * {@inheritDoc}
     */
    public function setExported(\DateTime $exported): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExported', [$exported]);

        parent::setExported($exported);
    }

    /**
     * {@inheritDoc}
     */
    public function getExported(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExported', []);

        return parent::getExported();
    }

    /**
     * {@inheritDoc}
     */
    public function getFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFields', []);

        return parent::getFields();
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceId', []);

        return parent::getResourceId();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(?string $description): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setSyncedBy(\Omeka\Entity\User $syncedBy = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSyncedBy', [$syncedBy]);

        parent::setSyncedBy($syncedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getSyncedBy(): ?\Omeka\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyncedBy', []);

        return parent::getSyncedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setSynced(?\DateTime $synced): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSynced', [$synced]);

        parent::setSynced($synced);
    }

    /**
     * {@inheritDoc}
     */
    public function getSynced(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSynced', []);

        return parent::getSynced();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\Omeka\Entity\User $owner = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner(): ?\Omeka\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy(\Omeka\Entity\User $createdBy = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy(): ?\Omeka\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy(\Omeka\Entity\User $modifiedBy = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', [$modifiedBy]);

        parent::setModifiedBy($modifiedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy(): ?\Omeka\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', []);

        return parent::getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated(\DateTime $created): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setModified(\DateTime $modified): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModified', [$modified]);

        parent::setModified($modified);
    }

    /**
     * {@inheritDoc}
     */
    public function getModified(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModified', []);

        return parent::getModified();
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist(\Doctrine\ORM\Event\LifecycleEventArgs $eventArgs): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', [$eventArgs]);

        parent::prePersist($eventArgs);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPublic(bool $isPublic): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPublic', [$isPublic]);

        parent::setIsPublic($isPublic);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPublic(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPublic', []);

        return parent::getIsPublic();
    }

}
